# Copyright 2025 Adobe
# All Rights Reserved.
#
# NOTICE: Adobe permits you to use, modify, and distribute this file in
# accordance with the terms of the Adobe license agreement accompanying
# it.
name: Build Dawn WebGPU

on:
  workflow_call:
    inputs:
      chromium_version:
        required: true
        description: "Chromium version this version of Dawn matches"
        type: string
      config:
        description: "Configuration (release or debug)"
        required: true
        type: string
      dawn_hash:
        description: "Git hash of Dawn code"
        required: true
        type: string
      bundle_name:
        description: "Name of the archive bundle"
        required: true
        type: string
    outputs:
      artifact_id:
        description: "Artifact ID of the archive bundle"
        value: ${{ jobs.create-bundle.outputs.artifact_id }}

jobs:
  build-dawn:
    strategy:
      matrix:
        include:
          - platform: ubuntu-latest
            target: linux
            python-version: "3.11"
          - platform: macos-latest
            target: macosx
            python-version: "3.11"
          - platform: windows-latest
            target: windows
            python-version: "3.11"
          - platform: macos-latest
            target: iphoneos
            python-version: "3.11"
          - platform: macos-latest
            target: iphonesimulator
            python-version: "3.11"

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install prerequisites on Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang cmake curl git gnupg2 libcurl4-openssl-dev libpython3-dev libssl-dev libx11-xcb-dev libxcursor-dev libxi-dev libxinerama-dev libxml2-dev libxrandr-dev libz-dev libz3-dev mesa-common-dev ninja-build pkg-config python3 python3-pip python3-venv tzdata unzip wget

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd Dawn
          pip install -r requirements.txt

      - name: Download Dawn source
        run: |
          cd Dawn
          python ci_build_dawn.py get-source --hash ${{ inputs.dawn_hash }}

      - name: Build Dawn for ${{ matrix.target }}
        run: |
          cd Dawn
          python ci_build_dawn.py build-target --target ${{ matrix.target }} --config ${{ inputs.config }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dawn-build-${{ matrix.target }}-${{ inputs.config }}
          path: |
            Dawn/builds/
            !Dawn/builds/*/out
          retention-days: 1

      - name: Upload dawn.json
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dawn-json
          path: Dawn/dawn_source/src/dawn/dawn.json
          overwrite: true
          retention-days: 1

  create-bundle:
    needs: [build-dawn]
    runs-on: ubuntu-latest
    outputs:
      bundle_name: ${{ inputs.bundle_name }}
      artifact_id: ${{ steps.store-artifact-bundle.outputs.artifact-id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd Dawn
          pip install -r requirements.txt

      - name: Download dawn.json
        uses: actions/download-artifact@v5
        with:
          name: dawn-json
          path: Dawn/dawn_source/src/dawn

      - name: Download all build artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: dawn-build-*-${{ inputs.config }}
          path: Dawn/builds/
          merge-multiple: true

      - name: Create artifact bundle
        run: |
          cd Dawn
          python ci_build_dawn.py bundle --chromium-version ${{ inputs.chromium_version }} --dawn-hash ${{ inputs.dawn_hash }} --bundle-name ${{ inputs.bundle_name }}

      - name: Store artifact bundle
        id: store-artifact-bundle
        uses: actions/upload-artifact@v4
        with:
          name: dawn-bundle-${{ inputs.config }}
          path: Dawn/dist/${{ inputs.bundle_name }}.zip
          retention-days: 1
